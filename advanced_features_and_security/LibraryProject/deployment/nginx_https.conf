# Nginx Configuration for Django HTTPS Deployment
# This configuration file sets up Nginx as a reverse proxy with HTTPS support

# Upstream Django application
upstream django_app {
    server 127.0.0.1:8000;  # Django development server (replace with Gunicorn in production)
}

# HTTP server - redirect all traffic to HTTPS
server {
    listen 80;
    server_name yourdomain.com www.yourdomain.com;  # Replace with your actual domain
    
    # Redirect all HTTP requests to HTTPS
    return 301 https://$server_name$request_uri;
}

# HTTPS server configuration
server {
    listen 443 ssl http2;
    server_name yourdomain.com www.yourdomain.com;  # Replace with your actual domain
    
    # SSL Certificate configuration
    ssl_certificate /path/to/your/certificate.crt;  # Replace with your SSL certificate path
    ssl_certificate_key /path/to/your/private.key;  # Replace with your private key path
    
    # SSL Security Configuration
    ssl_protocols TLSv1.2 TLSv1.3;  # Only allow secure TLS versions
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self'; connect-src 'self'; frame-ancestors 'none'; base-uri 'self'; object-src 'none';" always;
    
    # Client max body size (for file uploads)
    client_max_body_size 10M;
    
    # Static files handling
    location /static/ {
        alias /path/to/your/project/staticfiles/;  # Replace with your static files path
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # Media files handling
    location /media/ {
        alias /path/to/your/project/media/;  # Replace with your media files path
        expires 1y;
        add_header Cache-Control "public";
    }
    
    # Django application proxy
    location / {
        proxy_pass http://django_app;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Timeout settings
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
    
    # Security: Block access to sensitive files
    location ~ /\. {
        deny all;
    }
    
    location ~ \.(env|log|ini)$ {
        deny all;
    }
}

# Additional security configurations
# Rate limiting (optional)
limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;

# Apply rate limiting to specific endpoints
location /admin/login/ {
    limit_req zone=login burst=3 nodelay;
    proxy_pass http://django_app;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
}

location /api/ {
    limit_req zone=api burst=20 nodelay;
    proxy_pass http://django_app;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
}
